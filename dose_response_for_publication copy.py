# -*- coding: utf-8 -*-
"""Dose_response_for_PUBLICATION.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CAwzSEM0hSZ1AMAc0w_rWFrfycu6M0kM

# **TEVC - Dose Response**

## Set up libraries
"""

import pandas as pd
import numpy as np
import glob as glob

"""## Import and prepare data

### Mount google drive (optional)

comment out if you want to load data from hard drive
"""

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

"""### Import Files

Import all files from specified folder and combine into one dataframe called 'df'
"""

path = r'/content/drive/your_path_to_folder_here' # use your path
all_files = glob.glob(path + "/*_Datatable.csv") # use your extension

li = []

for filename in all_files:
    df = pd.read_csv(filename, index_col=None, header=0) # for .dat files you must specify separation for example sep='\t'
    li.append(df)

df = pd.concat(li, axis=0, ignore_index=True)

df.shape
#df.head()

"""### Remove excess coloumns and clean data
Here we are keeping only the relevant information, you can add or remove coloumns as you like.
We will also be standardising the units and generally cleaning up the data
"""

#coloumn names must be updated to those in your files, these are based on the standard coloumn titles from Robocyte2+ software export
data =  df[['Inj. ID 1'] + ['Well'] + ['Buffer'] + ['Comp. 1'] + ['conc. 1'] + ['unit 1'] + ['Minimum'] + ['Baseline Average'] + ['Start Date']]

data['date'] = data['Start Date'].str.extract('(../../....)', expand=True)

data.head()

"""Transform units all to uM scale"""

#Transform units all to µM scale
conditions = [
    (data['unit 1'] == 'mM'),
    (data['unit 1'] == 'µM'),
    (data['unit 1'] == 'nM')]

choices = ['1000', '1', '0.001']

data['factor'] = np.select(conditions, choices, default='0')
data['factor']=data.factor.astype(float)
data['Agonist_Concentration_µM'] = data['conc. 1'] * data['factor']
                         
data.head()

data =  data[['Inj. ID 1'] + ['Well'] + ['Buffer'] + ['Comp. 1'] + ['Minimum'] + ['Agonist_Concentration_µM'] + ['date']]
data.reset_index(drop=True)
data.head()

#data['log_Agonist_µM'] = np.log(data['Agonist_Concentration_µM']) #if you wish to calculate log concentration
data['Agonist'] = data['Comp. 1']
data['Response'] = data['Minimum']
data = data.drop(columns=['Comp. 1'])
data.head()

"""## Transform data to I/Imax for each oocyte"""

norm = data.Minimum / data.groupby(['Well']).Minimum.transform(np.min)
data['Response'] = norm
normdata = data.drop(columns=['Minimum', 'Buffer']) #drop unwanted coloumns
normgroup = normdata.groupby(['Agonist_Concentration_µM']).describe()
normdata.head()

grouped_data = normdata.groupby(['Agonist', 'Agonist_Concentration_µM']) #view grouped data
grouped_data['Response'].describe()

"""## Export as .csv
comment out if you do not want to export .csv
change path and file name before running

exports grouped mean, std, N into a new .csv file

Includes *injection ID*, Agonist and log agonist concentrations in uM
"""

export = normdata #select data to export
export = normdata.groupby(['Agonist', 'Agonist_Concentration_µM']) #select groups to average
export = export['Response'].describe()
#export = export.loc[export['Agonist_Concentration_µM'] == 5.000] #if you wish to export a single dose
export.head(15) #if you wish to view the exported data
#export.to_csv(r'drive/where_you_want_your_file/export.csv')